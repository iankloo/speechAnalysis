y <- x[['hits']]['hits'][[1]]
df <- ldply(y, data.frame)
z <- unlist(y)
z <- y[[1]]
z <- y[[1]][['_source']]
z <- y[['_source']]
z <- y[[1]][['_source']]
z <- y[[2]][['_source']]
df <- ldply(y, data.frame)
z <- y[[1]][['_source']]
length(y)
z <- data.frame(0)
z <- data.frame()
rbind(z, y[[1]][['_source']])
z <- rbind(z, y[[1]][['_source']])
View(z)
z <- data.frame()
for(i in 1:length(y)) {
z <- rbind(z, y[[i]][['_source']])
}
warnings(0)
z <- data.frame()
for(i in 1:length(y)) {
z <- rbind(z, as.character(y[[i]][['_source']]))
}
z <- data.frame()
for(i in 1:length(y)) {
z <- rbind(z, y[[i]][['_source']])
}
View(z)
y <- x[['hits']]['hits'][[1]]
z <- data.frame()
for(i in 1:length(y)) {
z <- rbind(z, y[[i]][['_source']], stringsAsFactors=FALSE)
}
View(z)
?rbind
rbind(z, y[[i]][['_source']])
z <- data.frame()
z <- data.frame(stringsAsFactors=FALSE)
for(i in 1:length(y)) {
z <- rbind(z, y[[i]][['_source']])
}
z <- data.frame(stringsAsFactors=FALSE)
i <- 1
z <- rbind(z, y[[i]][['_source']])
z <- data.frame(stringsAsFactors=FALSE)
z <- rbind(z, y[[i]][['_source']],stringsAsFactors=FALSE))
z <- rbind(z, y[[i]][['_source']],stringsAsFactors=FALSE)
z <- data.frame(stringsAsFactors=FALSE)
z <- rbind(z, y[[i]][['_source']],stringsAsFactors=FALSE)
z <- data.frame(stringsAsFactors=FALSE)
z <- rbind(z, y[[i]][['_source']])
as.character(z)
View(z)
as.character(z[,1])
z <- rbind.data.frame(z, y[[i]][['_source']])
z <- data.frame(stringsAsFactors=FALSE)
z <- rbind.data.frame(z, y[[i]][['_source']])
z <- data.frame(stringsAsFactors=FALSE)
for(i in 1:length(y)) {
z <- rbind.data.frame(z, y[[i]][['_source']])
}
z <- data.frame(author=character(), sourename=character(),
text=character(), title=character(), url=character(),
published=character())
for(i in 1:length(y)) {
z <- rbind.data.frame(z, y[[i]][['_source']])
}
z <- data.frame(author=character(), sourename=character(),
text=character(), title=character(), url=character(),
published=character())
z <- rbind(z, y[[i]][['_source']])
test <- y[[i]][['_source']]
test <- data.frame(y[[i]][['_source']])
test <- data.frame(y[[i]][['_source']], stringsAsFactors=FALSE)
test <- data.frame(y[[i]][['_source']])
stringsAsFactors
test <- data.frame(y[[i]][['_source']], stringsAsFactors=FALSE)
z <- data.frame(author=character(), sourename=character(),
text=character(), title=character(), url=character(),
published=character())
for(i in 1:length(y)) {
z <- rbind(z, data.frame(y[[i]][['_source']], stringsAsFactors=FALSE))
}
x <- Search(index='trump', q='make america great', size=10)
y <- x[['hits']]['hits'][[1]]
z <- data.frame(author=character(), sourename=character(),
text=character(), title=character(), url=character(),
published=character())
for(i in 1:length(y)) {
z <- rbind(z, data.frame(y[[i]][['_source']], stringsAsFactors=FALSE))
}
View(z)
x <- Search(index='trump', q='make america great', size=10)
y <- x[['hits']]['hits'][[1]]
z <- data.frame()
for(i in 1:length(y)) {
z <- rbind(z, data.frame(y[[i]][['_source']], stringsAsFactors=FALSE))
}
x <- Search(index='trump', q='make america great', size=100000)
x <- Search(index='trump', q='make america great', size=100000)
count(index='trump')
x <- Search(index='trump', q='make america great', size=8500)
x <- Search(index='trump', q='megny', size=8500)
y <- x[['hits']]['hits'][[1]]
z <- data.frame()
for(i in 1:length(y)) {
z <- rbind(z, data.frame(y[[i]][['_source']], stringsAsFactors=FALSE))
}
#define query
x <- Search(index='trump', q='megyn', size=8500)
y <- x[['hits']]['hits'][[1]]
#make this faster later...
#process info that was brought in
z <- data.frame()
for(i in 1:length(y)) {
z <- rbind(z, data.frame(y[[i]][['_source']], stringsAsFactors=FALSE))
}
#define query
start <- Sys.time()
x <- Search(index='trump', q='megyn', size=8500)
y <- x[['hits']]['hits'][[1]]
#make this faster later...
#process info that was brought in
z <- data.frame()
for(i in 1:length(y)) {
z <- rbind(z, data.frame(y[[i]][['_source']], stringsAsFactors=FALSE))
}
Sys.time - start
Sys.time() - start
start <- Sys.time()
x <- Search(index='trump', q='megyn', size=8500)
y <- x[['hits']]['hits'][[1]]
#make this faster later...
#process info that was brought in
z <- data.frame()
for(i in 1:length(y)) {
z <- rbind(z, data.frame(y[[i]][['_source']], stringsAsFactors=FALSE))
}
Sys.time() - start
count(index='trump', q='megyn')
x <- Search(index='trump', field='sourcename', q='megyn' size=8500)
x <- Search(index='trump', fields='sourcename', q='megyn' size=8500)
x <- Search(index='trump', fields='sourcename', q='megyn', size=8500)
start <- Sys.time()
x <- Search(index='trump', fields='sourcename', q='megyn', size=8500)
y <- x[['hits']]['hits'][[1]]
#make this faster later...
#process info that was brought in
z <- data.frame()
for(i in 1:length(y)) {
z <- rbind(z, data.frame(y[[i]][['_source']], stringsAsFactors=FALSE))
}
Sys.time() - start
#define query
start <- Sys.time()
x <- Search(index='trump', q='megyn', size=8500)
y <- x[['hits']]['hits'][[1]]
#make this faster later...
#process info that was brought in
z <- data.frame()
for(i in 1:length(y)) {
z <- rbind(z, data.frame(y[[i]][['_source']], stringsAsFactors=FALSE))
}
Sys.time() - start
x <- Search(index='trump', fields='title', q='megyn', size=8500)
y <- x[['hits']]['hits'][[1]]
z <- data.frame()
for(i in 1:length(y)) {
z <- rbind(z, data.frame(y[[i]][['_source']], stringsAsFactors=FALSE))
}
start <- Sys.time()
x <- Search(index='trump', type='text', ='megyn', size=8500)
y <- x[['hits']]['hits'][[1]]
#make this faster later...
#process info that was brought in
z <- data.frame()
for(i in 1:length(y)) {
z <- rbind(z, data.frame(y[[i]][['_source']], stringsAsFactors=FALSE))
}
Sys.time() - start
start <- Sys.time()
x <- Search(index='trump', type='text', q ='megyn', size=8500)
y <- x[['hits']]['hits'][[1]]
#make this faster later...
#process info that was brought in
z <- data.frame()
for(i in 1:length(y)) {
z <- rbind(z, data.frame(y[[i]][['_source']], stringsAsFactors=FALSE))
}
Sys.time() - start
#define query
start <- Sys.time()
x <- Search(index='trump', q ='megyn', size=8500)
y <- x[['hits']]['hits'][[1]]
#make this faster later...
#process info that was brought in
z <- data.frame()
for(i in 1:length(y)) {
z <- rbind(z, data.frame(y[[i]][['_source']], stringsAsFactors=FALSE))
}
Sys.time() - start
#define query
start <- Sys.time()
x <- Search(index='trump', type='title', q ='megyn', size=8500)
y <- x[['hits']]['hits'][[1]]
#make this faster later...
#process info that was brought in
z <- data.frame()
for(i in 1:length(y)) {
z <- rbind(z, data.frame(y[[i]][['_source']], stringsAsFactors=FALSE))
}
Sys.time() - start
x <- Search(index='trump', type='text', q ='megyn', size=8500)
x[['hits']]
x <- Search(index='trump', type='act', q ='megyn', size=8500)
y <- x[['hits']]['hits'][[1]]
x <- Search(index='trump', q ='megyn', size=8500)$hits$total
x <- Search(index='trump', q ='megyn', fields="title" size=8500)
x <- Search(index='trump', q ='megyn', fields="title", size=8500)
y <- x[['hits']]['hits'][[1]]
z <- data.frame()
for(i in 1:length(y)) {
z <- rbind(z, data.frame(y[[i]][['_source']], stringsAsFactors=FALSE))
}
Sys.time() - start
z <- data.frame()
for(i in 1:length(y)) {
z <- rbind(z, data.frame(y[[i]][['fields']], stringsAsFactors=FALSE))
}
Sys.time() - start
View(z)
data.frame(y[[i]][['fields']]
)
data.frame(y[[2]][['fields']]
)
data.frame(y[[3]][['fields']])
View(z)
y[1][['fields']]
y[[1]][['fields']]
y[[1]][['fields']]$title
y[[1]][['fields']]$title[1]
y[[1]][['fields']]$title[[1]]
y[[1]][['fields']]
as.data.frame(y[[1]][['fields']])
as.data.frame(title=y[[1]][['fields']])
y[[1]][['fields']]
as.data.frame(title=y[[1]][['fields']][[1]])
as.data.frame(title=y[[1]][['fields']]title)
as.data.frame(title=y[[1]][['fields']]$title)
y[[1]][['fields']]$title
as.data.frame(title=y[[1]][['fields']]$title[1])
as.data.frame(title=y[[1]][['fields']]$title[[1]])
data.frame(title=y[[1]][['fields']]$title[[1]])
data.frame(title=y[[1]][['fields']])
testdata.frame(title=y[[1]][['fields']])
test <- data.frame(title=y[[1]][['fields']])
View(test)
z <- data.frame()
for(i in 1:length(y)) {
z <- rbind(z, data.frame(title=y[[1]][['fields']]), stringsAsFactors=FALSE))
}
z <- data.frame()
for(i in 1:length(y)) {
z <- rbind(z, data.frame(title=y[[1]][['fields']], stringsAsFactors=FALSE))
}
View(z)
z <- data.frame()
for(i in 1:length(y)) {
z <- rbind(z, data.frame(title=y[[i]][['fields']], stringsAsFactors=FALSE))
}
data.frame(title=y[[i]][['fields']], stringsAsFactors=FALSE)
data.frame(title=y[[i]][['fields']]$title, stringsAsFactors=FALSE)
data.frame(title=y[[i]][['fields']]$title[1], stringsAsFactors=FALSE)
data.frame(title=y[[i]][['fields']]$title[[1], stringsAsFactors=FALSE)
data.frame(title=y[[i]][['fields']]$title[[1]], stringsAsFactors=FALSE)
z <- rbind(z, data.frame(title=y[[i]][['fields']]$title[[1]], stringsAsFactors=FALSE))
z <- data.frame()
for(i in 1:length(y)) {
z <- rbind(z, data.frame(title=y[[i]][['fields']]$title[[1]], stringsAsFactors=FALSE))
}
View(z)
x <- Search(index='trump', q ='megyn', fields="sourcename", size=8500)
y <- x[['hits']]['hits'][[1]]
start <- Sys.time()
x <- Search(index='trump', q ='megyn', fields="sourcename", size=8500)
y <- x[['hits']]['hits'][[1]]
z <- data.frame()
for(i in 1:length(y)) {
z <- rbind(z, data.frame(sourcename=y[[i]][['fields']]$sourcename[[1]], stringsAsFactors=FALSE))
}
View(z)
x <- Search(index='trump', q ='*', fields="sourcename", size=8500)
y <- x[['hits']]['hits'][[1]]
z <- data.frame()
for(i in 1:length(y)) {
z <- rbind(z, data.frame(sourcename=y[[i]][['fields']]$sourcename[[1]], stringsAsFactors=FALSE))
}
View(z)
x <- Search(index='trump', q ='ban muslims', fields="sourcename", size=8500)
y <- x[['hits']]['hits'][[1]]
z <- data.frame()
for(i in 1:length(y)) {
z <- rbind(z, data.frame(sourcename=y[[i]][['fields']]$sourcename[[1]], stringsAsFactors=FALSE))
}
x <- Search(index='trump', q ='ban muslims', fields=c("sourcename",'title'), size=8500)
y <- x[['hits']]['hits'][[1]]
z <- data.frame()
for(i in 1:length(y)) {
z <- rbind(z, data.frame(sourcename=y[[i]][['fields']]$sourcename[[1]], stringsAsFactors=FALSE))
}
x <- Search(index='trump', q ='ban muslims', fields=c("sourcename",'title'), size=8500)
y <- x[['hits']]['hits'][[1]]
z <- data.frame()
for(i in 1:length(y)) {
z <- rbind(z, data.frame(title = y[[i]][['fields']]$title[[1]], sourcename=y[[i]][['fields']]$sourcename[[1]], stringsAsFactors=FALSE))
}
View(z)
library(koRpus)
library(stringr)
setwd("/home/ian/Desktop/speechAnalysis/debates")
files <- list.files()
files <- gsub('~', '\\1', files)
#list of candidates
candidates <- list(republicans = c('TRUMP', 'CRUZ', 'BUSH', 'RUBIO'), democrats = c('CLINTON', 'SANDERS'))
repDebates <- files[grep('rep', files)]
demDebates <- files[grep('dem', files)]
finalDF <- data.frame(date=character(), party=character(), candidate=character(), grade=numeric(), age=numeric(), stringsAsFactors=FALSE)
#process for republicans
for(i in 1:length(candidates$republicans)) {
candidate <- candidates$republicans[i]
print(candidate)
#1st debate
for(j in 1:length(repDebates)){
debate <- readLines(repDebates[j])
split <- unlist(strsplit(debate, split = ' '))
startTerms <- grep(paste(candidate, ':', sep=''), split)
start <- numeric()
end <- numeric()
statements <- character()
if(length(startTerms > 0)){
for(k in 1:length(startTerms)){
start <- startTerms[k]
newSplit <- split[startTerms[k]:length(split)]
end <- start + grep('[A-Z]+\\:', newSplit[2:length(newSplit)])[1] - 1
statements <- c(statements, split[start:end])
}
statements <- gsub(paste(candidate, ':', sep=''), '\\1', statements)
debate <- tokenize(statements, format='obj', lang='en')
model <- flesch.kincaid(debate)
modelDF <- data.frame(model@Flesch.Kincaid)
temp <- data.frame(date = as.Date(str_sub(repDebates[j],4), '%m%d%Y'), party = 'rep', candidate=candidate, grade=modelDF[1,2], age=modelDF[1,3], stringsAsFactors=FALSE)
finalDF <- rbind(finalDF, temp)
}
}
}
j
debate <- readLines(repDebates[j])
split <- unlist(strsplit(debate, split = ' '))
startTerms <- grep(paste(candidate, ':', sep=''), split)
start <- numeric()
end <- numeric()
statements <- character()
startTerms
k
start <- startTerms[k]
newSplit <- split[startTerms[k]:length(split)]
end <- start + grep('[A-Z]+\\:', newSplit[2:length(newSplit)])[1] - 1
statements <- c(statements, split[start:end])
start <- startTerms[k]
startTerms
newSplit <- split[startTerms[k]:length(split)]
end <- start + grep('[A-Z]+\\:', newSplit[2:length(newSplit)])[1] - 1
grep('[A-Z]+\\:', newSplit[2:length(newSplit)])[1]
split[start:length(split)]
end > 0
is.na(end)
candidates <- list(republicans = c('TRUMP', 'CRUZ', 'BUSH', 'RUBIO'), democrats = c('CLINTON', 'SANDERS'))
repDebates <- files[grep('rep', files)]
demDebates <- files[grep('dem', files)]
finalDF <- data.frame(date=character(), party=character(), candidate=character(), grade=numeric(), age=numeric(), stringsAsFactors=FALSE)
#process for republicans
for(i in 1:length(candidates$republicans)) {
candidate <- candidates$republicans[i]
print(candidate)
#1st debate
for(j in 1:length(repDebates)){
debate <- readLines(repDebates[j])
split <- unlist(strsplit(debate, split = ' '))
startTerms <- grep(paste(candidate, ':', sep=''), split)
start <- numeric()
end <- numeric()
statements <- character()
if(length(startTerms > 0)){
for(k in 1:length(startTerms)){
start <- startTerms[k]
newSplit <- split[startTerms[k]:length(split)]
end <- start + grep('[A-Z]+\\:', newSplit[2:length(newSplit)])[1] - 1
if(is.na(end)) {
statements <- c(statements, split[start:length(split)])
} else{
statements <- c(statements, split[start:end])
}
}
statements <- gsub(paste(candidate, ':', sep=''), '\\1', statements)
debate <- tokenize(statements, format='obj', lang='en')
model <- flesch.kincaid(debate)
modelDF <- data.frame(model@Flesch.Kincaid)
temp <- data.frame(date = as.Date(str_sub(repDebates[j],4), '%m%d%Y'), party = 'rep', candidate=candidate, grade=modelDF[1,2], age=modelDF[1,3], stringsAsFactors=FALSE)
finalDF <- rbind(finalDF, temp)
}
}
}
View(finalDF)
repFinal <- finalDF
finalDF <- data.frame(date=character(), party=character(), candidate=character(), grade=numeric(), age=numeric(), stringsAsFactors=FALSE)
for(i in 1:length(candidates$democrats)) {
candidate <- candidates$democrats[i]
print(candidate)
#1st debate
for(j in 1:length(demDebates)){
debate <- readLines(demDebates[j])
split <- unlist(strsplit(debate, split = ' '))
startTerms <- grep(paste(candidate, ':', sep=''), split)
start <- numeric()
end <- numeric()
statements <- character()
if(length(startTerms > 0)){
for(k in 1:length(startTerms)){
start <- startTerms[k]
newSplit <- split[startTerms[k]:length(split)]
end <- start + grep('[A-Z]+\\:', newSplit[2:length(newSplit)])[1] - 1
if(is.na(end)) {
statements <- c(statements, split[start:length(split)])
} else{
statements <- c(statements, split[start:end])
}
}
statements <- gsub(paste(candidate, ':', sep=''), '\\1', statements)
debate <- tokenize(statements, format='obj', lang='en')
model <- flesch.kincaid(debate)
modelDF <- data.frame(model@Flesch.Kincaid)
temp <- data.frame(date = as.Date(str_sub(demDebates[j],4), '%m%d%Y'), party = 'dem', candidate=candidate, grade=modelDF[1,2], age=modelDF[1,3], stringsAsFactors=FALSE)
finalDF <- rbind(finalDF, temp)
}
}
}
View(finalDF)
firstRun <- rbind(repFinal, finalDF)
write.csv(firstRun, 'firstRun.csv', row.names=FALSE)
getwd(0)
getwd()
View(firstRun)
dat <- data.frame(
t = rep(0:23, each = 4),
var = rep(LETTERS[1:4], 4),
val = round(runif(4*24,0,50))
)
p8 <- nPlot(grade ~ date, group =  'candidate', data = firstRun,
type = 'stackedAreaChart', id = 'chart'
)
p8
library(rCharts)
p8 <- nPlot(grade ~ date, group =  'candidate', data = firstRun,
type = 'stackedAreaChart', id = 'chart'
)
p8
p8 <- nPlot(grade ~ as.numeric(date), group =  'candidate', data = firstRun,
type = 'stackedAreaChart', id = 'chart'
)
p8
test <- firstRun
test$date <- as.integer(test$date)
test$candidate <- as.factor(test$candidate)
p8 <- nPlot(grade ~ as.numeric(date), group =  'candidate', data = test,
type = 'stackedAreaChart', id = 'chart'
)
p8
test$date <- 1:nrow(test)
test$candidate <- as.factor(test$candidate)
p8 <- nPlot(grade ~ as.numeric(date), group =  'candidate', data = test,
type = 'stackedAreaChart', id = 'chart'
)
p8 <- nPlot(grade ~ as.numeric(date), group =  'candidate', data = test,
type = 'bar', id = 'chart'
)
p8
p8 <- nPlot(grade ~ as.numeric(date), group =  'candidate', data = test,
type = 'scatterChart', id = 'chart'
)
p8
p8 <- nPlot(grade ~ as.numeric(date), group =  'candidate', data = firstRun,
type = 'scatterChart', id = 'chart'
)
p8
p8 <- nPlot(grade ~ date, group =  'candidate', data = firstRun,
type = 'scatterChart', id = 'chart'
)
p8
p8 <- nPlot(grade ~ date, group =  'candidate', data = firstRun,
type = 'multiBarChart', id = 'chart'
)
p8
plot <- nPlot(grade ~ date, group =  'candidate', data = firstRun,
type = 'lineChart', id = 'chart'
)
plot
plot <- nPlot(grade ~ date, group =  'candidate', data = firstRun,
type = 'scatterChart', id = 'chart'
)
plot
